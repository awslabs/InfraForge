enabledForges = ["kubernetes-nonroot", "kubernetes-worker-nonroot"]

[global]
stackName = "aws-infra-forge"
dualStack = true
description = "Self-Managed Kubernetes Cluster Solution with Calico Networking: Deploys a production-grade Kubernetes environment on AWS infrastructure with enhanced security and networking capabilities. The architecture includes a dedicated control plane node and configurable worker nodes, all running with non-root privileges for improved security posture. Implements Calico as the Container Network Interface (CNI) provider, offering advanced network policy enforcement, microsegmentation, and optimized pod-to-pod communication. The solution integrates with AWS storage services including EFS for persistent shared storage and FSx for Lustre for high-performance computing workloads. Designed for organizations requiring complete control over their Kubernetes infrastructure with the flexibility to customize all aspects of the deployment, while maintaining compatibility with AWS services through integrated IAM roles and policies."

[forges]
[forges.vpc]
[forges.vpc.defaults]
id = "vpc"
type = "VPC"
cidrBlock = "10.69.0.0/16"
natGatewayPerAZ = false
[forges.efs]
[forges.efs.defaults]
type = "EFS"
security = "isolated"
subnet = "isolated"

[[forges.efs.instances]]
id = "efs"

[[forges.efs.instances]]
id = "efs1"
[forges.lustre]
[forges.lustre.defaults]
type = "LUSTRE"
security = "isolated"
subnet = "isolated"
azIndex = 1
deploymentType = "scratch2"
dataCompressionType = "lz4"
fileSystemVersion = "2.15"
perUnitStorageThroughput = 250
removalPolicy = "destory"
storageCapacityGiB = 1200

[[forges.lustre.instances]]
id = "lustre1"
[forges.ec2]
[forges.ec2.defaults]
type = "EC2"
security = "private"
subnet = "private"
azIndex = 2
debug = false
instanceType = "c7g.xlarge"
instanceCount = 1
keyName = "aws-infra-forge"
detailedMonitoring = false
ebsVolumeType = "gp3"
ebsSize = 30
ebsThroughput = 125
ebsIops = 3000
ebsOptimized = false
enclaveEnabled = false
networkCardCount = 1
purchaseOption = "od"
spotMaxPrice = ""
capacityBlockId = ""
enableEfa = false
enaSrdEnabled = false
osArch = "aarch64"
osName = "amazon"
osType = "linux"
osVersion = "2023"
policies = "AmazonS3FullAccess,AmazonSSMManagedInstanceCore"
s3Location = "s3://aws-infra-forge"
allowedPorts = "22@0.0.0.0/0;80,443,8443@10.69.0.0/16"
allowedPortsIpv6 = "22,80,443,8443@::/0"
requireImdsv2 = true
userDataScriptPath = ""
userDataToken = "sysinfo"

[[forges.ec2.instances]]
id = "kubernetes-nonroot"
instanceType = "c7g.xlarge"
instanceCount = 1
policies = "AmazonS3FullAccess,AmazonSSMManagedInstanceCore,AmazonSSMFullAccess"
userDataToken = "kubernetes-nonroot"

[[forges.ec2.instances]]
id = "kubernetes-worker-nonroot"
instanceType = "c7g.xlarge"
instanceCount = 3
dependsOn = "EC2:kubernetes-nonroot"
policies = "AmazonS3FullAccess,AmazonSSMManagedInstanceCore,AmazonSSMReadOnlyAccess"
userDataToken = "kubernetes-worker-nonroot"
