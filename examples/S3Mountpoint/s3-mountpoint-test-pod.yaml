apiVersion: v1
kind: Pod
metadata:
  name: s3-test-pod
  namespace: default
  labels:
    app: s3-mountpoint-test
    purpose: testing
spec:
  containers:
  - name: test-container
    image: amazonlinux:2023
    command: ["/bin/bash"]
    args: ["-c", "while true; do sleep 3600; done"]  # 1小时的sleep，给足够时间测试
    volumeMounts:
    - name: s3-volume
      mountPath: /mnt/s3
      readOnly: false  # 允许读写操作
    resources:
      requests:
        cpu: 100m
        memory: 128Mi
      limits:
        cpu: 200m
        memory: 256Mi
  volumes:
  - name: s3-volume
    persistentVolumeClaim:
      claimName: s3-sc-pvc
  restartPolicy: Never
  # 确保调度到CPU节点池
  nodeSelector:
    karpenter.sh/nodepool: karpenter-cpu
  # 容忍度设置（如果需要）
  tolerations: []
---
# 可选：创建一个用于测试的Job
apiVersion: batch/v1
kind: Job
metadata:
  name: s3-mountpoint-test-job
  namespace: default
spec:
  template:
    metadata:
      labels:
        app: s3-mountpoint-test-job
    spec:
      containers:
      - name: test-container
        image: amazonlinux:2023
        command: ["/bin/bash"]
        args:
        - "-c"
        - |
          echo "🚀 开始S3 Mountpoint测试..."
          
          echo "📁 检查挂载点:"
          df -h | grep s3
          
          echo "📊 统计S3内容:"
          echo "总文件数: $(ls -1 /mnt/s3/ | wc -l)"
          
          echo "📖 测试文件读取:"
          if [ -f '/mnt/s3/test-file.txt' ]; then
            echo "读取现有文件:"
            head -3 /mnt/s3/test-file.txt
          fi
          
          echo "💾 测试文件写入:"
          TIMESTAMP=$(date +%Y%m%d-%H%M%S)
          TEST_FILE="/mnt/s3/k8s-job-test-$TIMESTAMP.txt"
          echo "Kubernetes Job S3 Test - $TIMESTAMP" > "$TEST_FILE" 2>/dev/null
          if [ $? -eq 0 ]; then
            echo "✅ 文件写入成功: $TEST_FILE"
            cat "$TEST_FILE"
          else
            echo "❌ 文件写入失败"
          fi
          
          echo "📈 性能测试:"
          echo "目录列表性能:"
          time ls -la /mnt/s3/ > /dev/null 2>&1
          
          echo "🎉 测试完成!"
        volumeMounts:
        - name: s3-volume
          mountPath: /mnt/s3
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 200m
            memory: 256Mi
      volumes:
      - name: s3-volume
        persistentVolumeClaim:
          claimName: s3-sc-pvc
      restartPolicy: Never
      nodeSelector:
        karpenter.sh/nodepool: karpenter-cpu
  backoffLimit: 3
